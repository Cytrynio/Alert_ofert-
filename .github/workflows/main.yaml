name: Run Job Search Automation

on:
  schedule:
    - cron: '0 8 * * 1-5'    # 8:00 UTC
    - cron: '0 11 * * 1-5'   # 11:00 UTC
    - cron: '0 14 * * 1-5'   # 14:00 UTC
    - cron: '0 17 * * 1-5'   # 17:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  run-job-search:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "EMAIL=${{ secrets.EMAIL }}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
          echo "ADZUNA_APP_ID=${{ secrets.ADZUNA_APP_ID }}" >> .env
          echo "ADZUNA_APP_KEY=${{ secrets.ADZUNA_APP_KEY }}" >> .env
          echo "SEARCH_TERMS=${{ secrets.SEARCH_TERMS || 'Tester' }}" >> .env
          echo "LOCATION=${{ secrets.LOCATION || 'Gdansk' }}" >> .env
          echo "DISTANCE=${{ secrets.DISTANCE || '50' }}" >> .env

      - name: Download previous sent_jobs.txt
        uses: actions/download-artifact@v4
        with:
          name: sent-jobs
          path: .
        continue-on-error: true  # Kontynuuj, je≈õli artefaktu nie ma (pierwsze uruchomienie)

      - name: Run job search script
        run: python main.py

      - name: Upload sent_jobs.txt
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sent-jobs
          path: sent_jobs.txt
          retention-days: 30

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: job-search-logs
          path: job_search.log
          retention-days: 7